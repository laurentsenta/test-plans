## The manifest file describes a test plan to Testground.
## Amongst other things, it indicates the name of the test plan, the supported builders and runners, and configurations for those.
## It describes the test cases, specifying the number of instances and test parameters each supports.
name = "ping"

[builders]

[builders."docker:go"]
enable                = true
build_base_image      = "golang:1.17-buster"
enable_go_build_cache = true
go_proxy_mode         = "direct"

[builders."docker:go".dockerfile_extensions]
# TODO: when we rewrite dependencies, if the version is a git branch like `master`, we need a `go mod download` to sync the version.
# We could also change the docker_go.go in testground and make sure we don't overwrite the go.mod when we `COPY . /`.
pre_build    = "RUN cd ${PLAN_DIR} && go mod download github.com/libp2p/go-libp2p"

[builders."exec:go"]
enable = true

[runners]
"local:docker"  = { enabled = true }
"local:exec"    = { enabled = true }
"cluster:k8s"   = { enabled = true }

[global.build_config]
  enable_go_build_cache = true

[[testcases]]
name = "ping"
instances = { min = 2, max = 10000, default = 5 }

  [testcases.params]
  secure_channel    = { type = "enum", desc = "secure channel used", values = ["noise", "tls"], default = "noise" }
  max_latency_ms    = { type = "int", desc = "maximum value for random local link latency", unit = "ms", default = 1000 }
  iterations        = { type = "int", desc = "number of ping iterations we'll run against each peer", unit = "count", default = 5 }