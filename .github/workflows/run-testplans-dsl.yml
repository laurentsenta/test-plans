name: Run composition file with a custom git reference

on:
  workflow_call:
    inputs:
      dir:
        description: the directory with the testplans DSL test
        required: true
        type: string
jobs:
  run_test:
    name: Run testplans test
    runs-on: ubuntu-latest
    env:
      TEST_PLAN_DIR: ${{ inputs.dir }}
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
        with:
          path: test-plans
          repository: ${{ env.TEST_PLAN_REPO }}
          ref: ${{ env.TEST_PLAN_BRANCH }}
      - uses: actions/setup-node@v3
        with:
          node-version: 17
          cache: 'npm'
          cache-dependency-path: ./test-plans/${{ env.TEST_PLAN_DIR }}/package-lock.json
      - name: Install DSL deps
        working-directory: ./test-plans/dsl/
        run: npm ci
      - name: Install deps
        working-directory: ./test-plans/${{ env.TEST_PLAN_DIR }}/
        run: npm ci
      - name: Debug
        run: ls

      - name: Checkout testground
        uses: actions/checkout@v2
        with:
          path: ./testground

      - name: Debug
        run: ls

      - name: Debug
        working-directory: ./test-plans
        run: ls
      - name: Debug
        working-directory: ./test-plans/${{ env.TEST_PLAN_DIR }}/
        run: ls

      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          cache: true
          go-version-file: './testground/go.mod'
          cache-dependency-path: ./testground/go.sum

      - name: Build testground
        working-directory: ./testground
        run: go build -o testground main.go
      - name: ls testground
        working-directory: ./testground
        run: ls
      - name: Print env
        run: env
      - name: Testground help
        run: testground --help
      # - name: where is testground
      #   run: which testground
      - name: Build images
        working-directory: ./test-plans/${{ env.TEST_PLAN_DIR }}/
        run: make
      - name: Run the test
        timeout-minutes: 6
        working-directory: ./test-plans/${{ env.TEST_PLAN_DIR }}/
        run: npm run test
